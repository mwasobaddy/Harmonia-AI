// Prisma schema for Mitigation Platform
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  googleId  String?  @unique
  avatar    String?
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders    Order[]
  documents Document[]

  @@map("users")
}

model Order {
  id            String   @id @default(cuid())
  userId        String
  offenseType   String   // Changed from OffenseCategory enum
  status        String   @default("PENDING") // Changed from OrderStatus enum
  amount        Float
  stripeSessionId String? @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  deletedAt     DateTime? // Soft delete field

  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  responses     QuestionnaireResponse[]
  document      Document?

  @@map("orders")
}

model QuestionnaireResponse {
  id         String   @id @default(cuid())
  orderId    String
  question   String
  answer     String
  createdAt  DateTime @default(now())

  order      Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("questionnaire_responses")
}

model Document {
  id          String   @id @default(cuid())
  orderId     String   @unique
  userId      String
  content     String
  status      String   @default("PENDING") // Changed from ReviewStatus enum
  reviewedBy  String?
  reviewedAt  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("documents")
}